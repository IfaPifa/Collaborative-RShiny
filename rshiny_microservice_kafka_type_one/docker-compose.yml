version: "3.7"
services:

  zookeeper:
    container_name: zookeeper
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka-server
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE= true
      - KAFKA_CREATE_TOPICS= "input, output"
    depends_on:
      - zookeeper

  shiny_front:
    image: rocker/rstudio:4.5.0
    build: .
    container_name: shiny_front
    volumes:
      - ./shiny_front.r:/home/shiny_front.r
    ports:
      - 8080:8787
    environment:
      USER: user
      PASSWORD: password

  shiny_back:
    image: rocker/rstudio:4.5.0
    build: .
    container_name: shiny_back
    volumes:
      - ./shiny_back.r:/home/shiny_back.r
    ports:
      - 8180:8787
    environment:
      USER: user
      PASSWORD: password

volumes:
  kafka-volume:
  zookeeper-volume:   
